{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    console.log(\"hey\", this.authService.isLoggedIn());\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnEC,OAAO,CAACC,GAAG,CAAC,KAAK,EAAC,IAAI,CAACN,WAAW,CAACO,UAAU,EAAE,CAAC;IAChD,IAAI,IAAI,CAACP,WAAW,CAACO,UAAU,EAAE,EAAE;MACjC,OAAO,IAAI;;IAEb,IAAI,CAACN,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChC,OAAO,KAAK;EACd;;AAVWV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","route","state","console","log","isLoggedIn","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\siddh\\OneDrive\\Desktop\\Medex\\frontend\\src\\src\\app\\auth\\auth.guard.ts"],"sourcesContent":["import { CanActivate,Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\r\n    console.log(\"hey\",this.authService.isLoggedIn())\r\n    if (this.authService.isLoggedIn()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}