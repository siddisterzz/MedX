{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class AuthService {\n  constructor(http, cookieService) {\n    this.http = http;\n    this.cookieService = cookieService;\n    this.isLoggedInSubject = new BehaviorSubject(false);\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n    this.status = false;\n    this.document = window.document;\n  }\n  isLoggedIn() {\n    // check if user is logged in\n    console.log(this.isLoggedInSubject.asObservable());\n    const isLoggedIn = localStorage.getItem('user');\n    return isLoggedIn !== null;\n  }\n  registerUser(name, email, mobileno, password) {\n    const authData = {\n      data: {\n        name: name,\n        email: email,\n        mobileno: mobileno,\n        password: password\n      }\n    };\n    return this.http.post(\"http://localhost:3000/user/register\", authData, {\n      observe: 'response'\n    });\n  }\n  login(email, password) {\n    // login user\n    const body = {\n      data: {\n        email: email,\n        password: password\n      }\n    };\n    const response = this.http.post(\"http://localhost:3000/user/login\", body, {\n      observe: 'response',\n      withCredentials: true\n    });\n    response.subscribe(response => {\n      const body = response.body;\n      if (body.status === \"success\") {\n        console.log('response', response);\n        console.log(this.cookieService.get('userData'));\n        const userData = JSON.parse(this.cookieService.get('userData'));\n        console.log(userData.email, userData.cart);\n        localStorage.setItem('user', userData.email);\n        localStorage.setItem('cart', JSON.stringify({\n          _id: '64708a90ecaa27c9022ec5c9',\n          brandname: 'Synthroid',\n          genname: 'Levothyroxine',\n          brandp: 971,\n          genp: 66,\n          purpose: \"Thyroid Hormone\",\n          __v: 0\n        }));\n        this.isLoggedInSubject.next(true);\n      } else {\n        alert(body.data);\n      }\n    });\n  }\n  logout() {\n    //move current cart item and email to Cart Collection\n    const userData = {\n      data: {\n        email: localStorage.getItem('user'),\n        cart: localStorage.getItem('cart')\n      }\n    };\n    const response = this.http.post(\"http://localhost:3000/cart/addtoCart\", userData, {\n      observe: 'response'\n    });\n    response.subscribe(response => {\n      const body = response.body;\n      if (body.status === \"success\") {\n        console.log(\"info saved\");\n      } else {\n        console.log(\"failed\");\n      }\n    });\n    //destroy session\n    const response1 = this.http.post(\"http://localhost:3000/user/logout\", {\n      observe: 'response'\n    });\n    response1.subscribe(response => {\n      const body = response.body;\n      if (body.status === \"success\") {\n        console.log(\"session deleted\");\n      } else {\n        console.log(\"failed1\");\n      }\n    });\n    // logout user\n    localStorage.removeItem('user');\n    localStorage.removeItem('cart');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","AuthService","constructor","http","cookieService","isLoggedInSubject","asObservable","window","document","isLoggedIn","console","log","localStorage","getItem","registerUser","name","email","mobileno","password","authData","data","post","observe","login","body","response","withCredentials","subscribe","status","get","userData","JSON","parse","cart","setItem","stringify","_id","brandname","genname","brandp","genp","purpose","__v","next","alert","logout","response1","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\siddh\\OneDrive\\Desktop\\Medex\\frontend\\src\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isLoggedInSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public isLoggedIn$: Observable<boolean> = this.isLoggedInSubject.asObservable();\r\n  status : boolean =false\r\n  document: Document = window.document!;\r\n\r\n\r\n\r\n  constructor(private http: HttpClient,private cookieService: CookieService) {}\r\n\r\n  public isLoggedIn(): boolean {\r\n    // check if user is logged in\r\n    console.log(this.isLoggedInSubject.asObservable())\r\n    const isLoggedIn = localStorage.getItem('user');\r\n    return isLoggedIn !== null\r\n  }\r\n\r\n  public registerUser(name: string , email: string , mobileno: String ,password: string){\r\n    const authData  = {data:{name:name , email:email , mobileno:mobileno , password:password}};\r\n    return this.http.post<any>(\"http://localhost:3000/user/register\", authData, { observe: 'response' });\r\n  }\r\n\r\n  public login(email:String,password:String) {\r\n    // login user\r\n    const body={data:{email:email,password:password}}\r\n    const response=this.http.post<any>(\"http://localhost:3000/user/login\", body, {observe:'response',withCredentials: true})\r\n    response.subscribe(response=>{\r\n      const body=response.body\r\n      if(body.status===\"success\"){\r\n        console.log('response',response)\r\n        console.log(this.cookieService.get('userData'))\r\n        const userData = JSON.parse(this.cookieService.get('userData'))\r\n        console.log(userData.email,userData.cart)\r\n        localStorage.setItem('user', userData.email);\r\n        localStorage.setItem('cart',JSON.stringify({_id: '64708a90ecaa27c9022ec5c9', brandname: 'Synthroid', genname: 'Levothyroxine', brandp: 971, genp: 66,purpose : \"Thyroid Hormone\", __v : 0}));\r\n        this.isLoggedInSubject.next(true);\r\n      }\r\n      else{\r\n        alert(body.data)\r\n      }\r\n      });\r\n  }\r\n\r\n\r\n  public logout(): void {\r\n    //move current cart item and email to Cart Collection\r\n    const userData={data:{email:localStorage.getItem('user'),cart:localStorage.getItem('cart')}}\r\n    const response=this.http.post<any>(\"http://localhost:3000/cart/addtoCart\", userData, { observe: 'response' });\r\n    response.subscribe(response=>{\r\n      const body=response.body\r\n      if(body.status===\"success\"){\r\n        console.log(\"info saved\")\r\n      }\r\n      else{\r\n        console.log(\"failed\")\r\n      }\r\n    })\r\n\r\n    //destroy session\r\n    const response1=this.http.post<any>(\"http://localhost:3000/user/logout\", { observe: 'response' });\r\n    response1.subscribe(response=>{\r\n      const body=response.body\r\n      if(body.status===\"success\"){\r\n        console.log(\"session deleted\")\r\n      }\r\n      else{\r\n        console.log(\"failed1\")\r\n      }\r\n    })\r\n\r\n    // logout user\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('cart');\r\n\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}