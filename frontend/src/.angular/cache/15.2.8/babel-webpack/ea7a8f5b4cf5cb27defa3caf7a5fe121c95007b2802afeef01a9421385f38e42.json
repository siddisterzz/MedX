{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isLoggedInSubject = new BehaviorSubject(false);\n    this.isLoggedIn$ = this.isLoggedInSubject.asObservable();\n    this.selectedMedicines = [];\n    this.status = false;\n    this.document = window.document;\n    this.cart = \"\";\n  }\n  isLoggedIn() {\n    // check if user is logged in\n    console.log(this.isLoggedInSubject.asObservable());\n    const isLoggedIn = localStorage.getItem('user');\n    return isLoggedIn !== null;\n  }\n  registerUser(name, email, mobileno, password) {\n    const authData = {\n      data: {\n        name: name,\n        email: email,\n        mobileno: mobileno,\n        password: password\n      }\n    };\n    return this.http.post(\"http://localhost:3000/user/register\", authData, {\n      observe: 'response'\n    });\n  }\n  login(email, password) {\n    // login user\n    const body = {\n      data: {\n        email: email,\n        password: password\n      }\n    };\n    return this.http.post(\"http://localhost:3000/user/login\", body, {\n      observe: 'response',\n      withCredentials: true\n    });\n  }\n  logout() {\n    //move current cart item and email to Cart Collection\n    const cart = localStorage.getItem('cart');\n    if (cart !== null) {\n      this.selectedMedicines = JSON.parse(cart);\n    }\n    const userData = {\n      data: {\n        email: localStorage.getItem('user'),\n        cart: this.selectedMedicines\n      }\n    };\n    const response = this.http.post(\"http://localhost:3000/cart/addtoCart\", userData, {\n      observe: 'response'\n    });\n    response.subscribe(response => {\n      const body = response.body;\n      if (body.status === \"success\") {\n        console.log(\"info saved\");\n      } else {\n        console.log(\"failed\");\n      }\n    });\n    //destroy session\n    const response1 = this.http.post(\"http://localhost:3000/user/logout\", {\n      observe: 'response'\n    });\n    response1.subscribe(response => {\n      const body = response.body;\n      if (body.status === \"success\") {\n        console.log(\"session deleted\");\n      } else {\n        console.log(\"failed1\");\n      }\n    });\n    // logout user\n    localStorage.removeItem('user');\n    localStorage.removeItem('cart');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","AuthService","constructor","http","isLoggedInSubject","asObservable","window","document","isLoggedIn","console","log","localStorage","getItem","registerUser","name","email","mobileno","password","authData","data","post","observe","login","body","withCredentials","logout","cart","selectedMedicines","JSON","parse","userData","response","subscribe","status","response1","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\siddh\\OneDrive\\Desktop\\Medex\\frontend\\src\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpClient } from '@angular/common/http';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isLoggedInSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public isLoggedIn$: Observable<boolean> = this.isLoggedInSubject.asObservable();\r\n  selectedMedicines: any[] = [];\r\n  status : boolean =false\r\n  document: Document = window.document!;\r\n  cart=\"\"\r\n\r\n\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public isLoggedIn(): boolean {\r\n    // check if user is logged in\r\n    console.log(this.isLoggedInSubject.asObservable())\r\n    const isLoggedIn = localStorage.getItem('user');\r\n    return isLoggedIn !== null\r\n  }\r\n\r\n  public registerUser(name: string , email: string , mobileno: String ,password: string){\r\n    const authData  = {data:{name:name , email:email , mobileno:mobileno , password:password}};\r\n    return this.http.post<any>(\"http://localhost:3000/user/register\", authData, { observe: 'response' });\r\n  }\r\n\r\n  public login(email:String,password:String) {\r\n    // login user\r\n    const body={data:{email:email,password:password}}\r\n    return this.http.post<any>(\"http://localhost:3000/user/login\", body, {observe:'response',withCredentials: true})\r\n  }\r\n\r\n\r\n  public logout(): void {\r\n    //move current cart item and email to Cart Collection\r\n    const cart = localStorage.getItem('cart')\r\n    if(cart!==null){\r\n      this.selectedMedicines=JSON.parse(cart)\r\n    }\r\n    const userData={data:{email:localStorage.getItem('user'),cart:this.selectedMedicines}}\r\n    const response=this.http.post<any>(\"http://localhost:3000/cart/addtoCart\", userData, { observe: 'response' });\r\n    response.subscribe(response=>{\r\n      const body=response.body\r\n      if(body.status===\"success\"){\r\n        console.log(\"info saved\")\r\n      }\r\n      else{\r\n        console.log(\"failed\")\r\n      }\r\n    })\r\n\r\n    //destroy session\r\n    const response1=this.http.post<any>(\"http://localhost:3000/user/logout\", { observe: 'response' });\r\n    response1.subscribe(response=>{\r\n      const body=response.body\r\n      if(body.status===\"success\"){\r\n        console.log(\"session deleted\")\r\n      }\r\n      else{\r\n        console.log(\"failed1\")\r\n      }\r\n    })\r\n\r\n    // logout user\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('cart');\r\n\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}